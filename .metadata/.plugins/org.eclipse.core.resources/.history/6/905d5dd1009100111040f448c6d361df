/*
 * 功能:山寨版qq实现
 */
package com.qq.client.view;
import java.awt.*;
import java.awt.event.*;
import java.io.*;

import javax.swing.*;
import com.qq.client.modul.*;
import com.qq.common.*;
import com.qq.client.manage.*;
public class qqClientLogin extends JFrame implements ActionListener{

	JPanel jp1=null,jp2=null,jp3=null,jp4=null;
	JLabel jp2_jl1,jp2_jl2,jp2_jl3,jp2_jl4;
	JButton jp2_jb1;
	JTextArea jp1_jta;
	JTextField jp2_jtf;
	JCheckBox jp2_jcb1,jp2_jcb2;
	JPasswordField jp2_jpf;
	JLabel jl=null;
	JTabbedPane jtp=null;
	JButton jp1_jbLogin=null,jp1_jbRegist=null,jp1_jbCancel=null;
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		qqClientLogin qqcl=new qqClientLogin();
	}
    
	public qqClientLogin()
	{
		jl=new JLabel(new ImageIcon("Image/Main_Title.png"));//存放图片的路径
		
		jp1=new JPanel();
		jp2=new JPanel(new GridLayout(3,3,4,4));
		jp3=new JPanel();
		jp4=new JPanel();
		jp1_jbLogin=new JButton(new ImageIcon("Image/denglu.gif"));//存放图片的路径
		jp1_jbLogin.addActionListener(this);
		jp1_jbRegist=new JButton(new ImageIcon("Image/xiangdao.gif"));//存放图片的路径
		jp1_jbRegist.addActionListener(this);
		jp1_jbCancel=new JButton(new ImageIcon("Image/quxiao.gif"));//存放图片的路径
		jp1_jbCancel.addActionListener(this);
		jp1.add(jp1_jbLogin);
		jp1.add(jp1_jbRegist);
		jp1.add(jp1_jbCancel);
		
		jp2_jl1=new JLabel("QQ账号",JLabel.CENTER);
		jp2_jl1.setFont(new Font("微软雅黑",Font.BOLD,20));
		jp2_jl2=new JLabel("QQ密码",JLabel.CENTER);
		jp2_jl2.setFont(new Font("微软雅黑",Font.BOLD,20));
		jp2_jl3=new JLabel(new ImageIcon("Image/clear.gif"));
		jp2_jl3.setForeground(Color.red);
		jp2_jl3.setFont(new Font("微软雅黑",Font.BOLD,20));
		jp2_jl4=new JLabel("忘记密码",JLabel.CENTER);
		jp2_jl4.setForeground(Color.blue);
		jp2_jl4.setFont(new Font("微软雅黑",Font.BOLD,20));
		jp2_jb1=new JButton("申请密码保护");
		
		jp2_jcb1=new JCheckBox("记住密码");
		jp2_jcb2=new JCheckBox("自动登录");
		jp2_jcb2.addActionListener(this);
		
		jp2_jtf=new JTextField();
		jp2_jpf=new JPasswordField();
		
		jp2.add(jp2_jl1);
		jp2.add(jp2_jtf);
		jp2.add(jp2_jl3);
		jp2.add(jp2_jl2);
		jp2.add(jp2_jpf);
		jp2.add(jp2_jl4);
		jp2.add(jp2_jcb1);
		jp2.add(jp2_jcb2);
		jp2.add(jp2_jb1);
		
		jtp=new JTabbedPane();
		jtp.add(jp2);
		jtp.add(jp3);
		jtp.add(jp4);
		
		jtp.setTitleAt(0, "QQ号码登陆");
		jtp.setTitleAt(1, "手机号码登陆");
		jtp.setTitleAt(2, "邮箱登陆");
		
		this.add(jp1,"South");
		this.add(jtp);
		this.add(jl,"North");
		
		this.setTitle("QQ2012");
		this.setBackground(Color.white);
		this.setResizable(false);
		this.setSize(400,240);
		this.setLocation(350,300);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
	}

	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		if(arg0.getSource() == jp2_jcb2)
		{
			if(jp2_jcb2.isSelected())
			  jp2_jcb1.setSelected(true);
		}
		if(arg0.getSource() == jp1_jbRegist)
		{
			
		}
		if(arg0.getSource() == jp1_jbCancel)
		{
			jp2_jtf.setText("");
			jp2_jpf.setText("");
		}
		if(arg0.getSource() == jp1_jbLogin)
		{	
			if(jp2_jtf.getText().trim().equals("") || jp2_jpf.getPassword().equals(""))
			{
				JOptionPane.showMessageDialog(this, "用户名或者密码不能为空");
				return;
			}
			else{
			Usr usr=new Usr(jp2_jtf.getText().trim(),new String(jp2_jpf.getPassword()));
			int nFlag=new checkUsr().check(usr);
			if(nFlag == MessageType.Message_LoginSuccess)
			{   	     	
				QqList ql=new QqList(jp2_jtf.getText().trim());
				ManageQqList.addQqList(jp2_jtf.getText().trim(),ql);
				
				Message mFriend=new Message();
				mFriend.setMsgType(MessageType.Message_FriendOnline);
				mFriend.setSenderId(jp2_jtf.getText().trim());
				ObjectOutputStream oosFriend;
				try {
					System.out.println(jp2_jtf.getText().trim());
					oosFriend = new ObjectOutputStream(ManageCCST.get(jp2_jtf.getText().trim()).getS().getOutputStream());
					oosFriend.writeObject(mFriend);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				this.dispose();
			}
			}
			else if(nFlag == MessageType.Message_LoginFail)
			{
				JOptionPane.showMessageDialog(this, "用户名或密码错误");
			}
			else if(nFlag == MessageType.Message_SCCTExisted)
			{
				JOptionPane.showMessageDialog(this, "此账号已登录服务器,不能重复登陆");
			}
		}
	}
}